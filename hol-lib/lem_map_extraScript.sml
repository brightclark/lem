(*Generated by Lem from ../library-new/map_extra.lem.*)
open HolKernel Parse boolLib bossLib;
open lem_boolTheory basic_classesTheory lem_functionTheory optionTheory listTheory rich_listTheory lem_listTheory lem_numTheory sortingTheory integerTheory intReduce lem_mapTheory;

val _ = numLib.prefer_num();



val _ = new_theory "lem_map_extra"



(*open import Bool Basic_classes Function Maybe List Num*)
(*include import Map*)

(* -------------------------------------------------------------------------- *)
(* find                                                                       *)
(* -------------------------------------------------------------------------- *)

(*val find : forall 'k 'v. Ord 'k => 'k -> map 'k 'v -> 'v*)
(*let find k m = match (lookup k m) with Just x -> x end*)

val _ = export_theory()

