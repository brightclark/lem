type ocaml_num = Hol.Integer.int

val add_num : ocaml_num -> ocaml_num -> ocaml_num
val sub_num : ocaml_num -> ocaml_num -> ocaml_num
val mult_num : ocaml_num -> ocaml_num -> ocaml_num
val power_num : ocaml_num -> ocaml_num -> ocaml_num
val div_num : ocaml_num -> ocaml_num -> ocaml_num
val quo_num : ocaml_num -> ocaml_num -> ocaml_num
val mod_num : ocaml_num -> ocaml_num -> ocaml_num
val lt_num : ocaml_num -> ocaml_num -> bool
val le_num : ocaml_num -> ocaml_num -> bool
val gt_num : ocaml_num -> ocaml_num -> bool
val ge_num : ocaml_num -> ocaml_num -> bool
val num_of_int : num -> ocaml_num
val minus_num : ocaml_num -> ocaml_num
val eq_num: ocaml_num -> ocaml_num -> bool
val num_of_string: string -> ocaml_num

